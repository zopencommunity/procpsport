export ZOPEN_DEV_URL="https://gitlab.com/procps-ng/procps.git"
export ZOPEN_DEV_DEPS="bash coreutils zoslib perl libtool make m4 gettext automake autoconf gzip tar sed grep findutils xz getopt ncurses curl"
export PROCPS_VERSION="4.0.3"
export ZOPEN_STABLE_URL="https://gitlab.com/procps-ng/procps/-/archive/v${PROCPS_VERSION}/procps-v${PROCPS_VERSION}.tar.gz"
export ZOPEN_CATEGORIES="utilities"
export ZOPEN_STABLE_DEPS="perl m4 gettext libtool autoconf automake wget bash coreutils zoslib make sed gawk xz getopt ncurses curl pkgconfig"
export ZOPEN_BOOTSTRAP="./autogen.sh"
export ZOPEN_BUILD_LINE="STABLE"
export ZOPEN_COMP=CLANG
export ZOPEN_EXTRA_MAKE_OPTS="WITH_NCURSES=1"
export ZOPEN_EXTRA_CONFIGURE_OPTS="--without-ncurses"
export ZOPEN_EXTRA_CPPFLAGS="-I\${NCURSES_HOME}/include/ncurses -D__thread=1"
export ZOPEN_CHECK="skip"
export ZOPEN_SYSTEM_PREREQ="procfs"

zopen_post_buildenv()
{
  export NCURSES_LIBS="$LIBS"	
  export NCURSES_CFLAGS="$CFLAGS $CPPCFLAGS"	
}

zopen_init()
{
  export AC_MACRO_PATH="$AUTOCONF_HOME/share/autoconf/autoconf"
  echo $AC_MACRO_PATH
}

zopen_check_results()
{
  dir="$1"
  pfx="$2"
  chk="$1/$2_check.log"

  # Echo the following information to gauge build health
  echo "actualFailures:0"
  echo "totalTests:1"
  echo "expectedFailures:0"
  echo "expectedTotalTests:1"
}

zopen_append_to_env()
{
  # echo envars outside of PATH, MANPATH, LIBPATH
}

zopen_append_to_setup()
{
  # echo commands that will run when installing via setup.sh
}

zopen_install_caveats()
{
  echo "Procps is currently in alpha and requires the /proc filesystem."
}

zopen_post_install()
{
  export ZOPEN_PROCS="watch pkill pmap pgrep"
  findstring="find . -type f"
  for cmd in $ZOPEN_PROCS; do
    findstring="${findstring} ! -name ${cmd}"
  done

  # remove unsupported binaries: run as a child process so the directory change does not 'survive'
  (cd "$1/bin" && ${findstring} -print | xargs rm)
}

zopen_get_version()
{
  echo "${PROCPS_VERSION}"
}
